// +build !ignore_autogenerated

// Code generated by operator-sdk. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNC) DeepCopyInto(out *ZNC) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNC.
func (in *ZNC) DeepCopy() *ZNC {
	if in == nil {
		return nil
	}
	out := new(ZNC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZNC) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCList) DeepCopyInto(out *ZNCList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZNC, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCList.
func (in *ZNCList) DeepCopy() *ZNCList {
	if in == nil {
		return nil
	}
	out := new(ZNCList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZNCList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCSpec) DeepCopyInto(out *ZNCSpec) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCSpec.
func (in *ZNCSpec) DeepCopy() *ZNCSpec {
	if in == nil {
		return nil
	}
	out := new(ZNCSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCSpecConfig) DeepCopyInto(out *ZNCSpecConfig) {
	*out = *in
	if in.LoadModules != nil {
		in, out := &in.LoadModules, &out.LoadModules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Motd != nil {
		in, out := &in.Motd, &out.Motd
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]ZNCSpecConfigUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCSpecConfig.
func (in *ZNCSpecConfig) DeepCopy() *ZNCSpecConfig {
	if in == nil {
		return nil
	}
	out := new(ZNCSpecConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCSpecConfigUser) DeepCopyInto(out *ZNCSpecConfigUser) {
	*out = *in
	if in.LoadModules != nil {
		in, out := &in.LoadModules, &out.LoadModules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]ZNCSpecConfigUserNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCSpecConfigUser.
func (in *ZNCSpecConfigUser) DeepCopy() *ZNCSpecConfigUser {
	if in == nil {
		return nil
	}
	out := new(ZNCSpecConfigUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCSpecConfigUserNetwork) DeepCopyInto(out *ZNCSpecConfigUserNetwork) {
	*out = *in
	if in.LoadModules != nil {
		in, out := &in.LoadModules, &out.LoadModules
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]ZNCSpecConfigUserNetworkChan, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCSpecConfigUserNetwork.
func (in *ZNCSpecConfigUserNetwork) DeepCopy() *ZNCSpecConfigUserNetwork {
	if in == nil {
		return nil
	}
	out := new(ZNCSpecConfigUserNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCSpecConfigUserNetworkChan) DeepCopyInto(out *ZNCSpecConfigUserNetworkChan) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCSpecConfigUserNetworkChan.
func (in *ZNCSpecConfigUserNetworkChan) DeepCopy() *ZNCSpecConfigUserNetworkChan {
	if in == nil {
		return nil
	}
	out := new(ZNCSpecConfigUserNetworkChan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCSpecConfigUserPass) DeepCopyInto(out *ZNCSpecConfigUserPass) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCSpecConfigUserPass.
func (in *ZNCSpecConfigUserPass) DeepCopy() *ZNCSpecConfigUserPass {
	if in == nil {
		return nil
	}
	out := new(ZNCSpecConfigUserPass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZNCStatus) DeepCopyInto(out *ZNCStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZNCStatus.
func (in *ZNCStatus) DeepCopy() *ZNCStatus {
	if in == nil {
		return nil
	}
	out := new(ZNCStatus)
	in.DeepCopyInto(out)
	return out
}
